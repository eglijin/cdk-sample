AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Performance Metrics

Globals:
  Function:
    Timeout: 300
    CodeUri: ./
    Runtime: java11
    MemorySize: 128
    Environment:
      Variables:
        kmsKeyId: ""
Resources:
  #
  PerformanceApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub "${AWS::StackName} Performance API"
      Description: Server API
      StageName: test
      DefinitionBody:
        'Fn::Transform':
          Name: 'AWS::Include'
          Parameters:
            Location: ./api/apigw.yml
  #
  PerformanceFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: ap.Greeter
      AutoPublishAlias: live
      DeploymentPreference:
        Type: AllAtOnce # Or Canary10Percent5Minutes, Linear10PercentEvery1Minute, ...
      ProvisionedConcurrencyConfig:
        ProvisionedConcurrentExecutions: 3
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref PerformanceApi
            Path: /
            Method: get
#  PerformanceScalableTarget:
#    Type: AWS::ApplicationAutoScaling::ScalableTarget
#    Properties:
#      MaxCapacity: 100
#      MinCapacity: 5
#      ResourceId: !Sub function:${PerformanceFunction}:live # You need to specify an alis or version here
#      RoleARN: !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/lambda.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_LambdaConcurrency
#      ScalableDimension: lambda:function:ProvisionedConcurrency
#      ServiceNamespace: lambda
#    DependsOn: PerformanceFunctionAliaslive # This is your function logical ID + "Alias" + what you use for AutoPublishAlias
#  PersonCreateScalingPolicy:
#    Type: AWS::ApplicationAutoScaling::ScalingPolicy
#    Properties:
#      PolicyName: utilization
#      PolicyType: TargetTrackingScaling
#      ScalingTargetId: !Ref PerformanceScalableTarget
#      TargetTrackingScalingPolicyConfiguration:
#        TargetValue: 0.70 # Any value between 0.1 and 0.9 can be used here
#        PredefinedMetricSpecification:
#          PredefinedMetricType: LambdaProvisionedConcurrencyUtilization
  #
Outputs:
  PerformanceApi:
    Description: "API Gateway endpoint URL for Issuing Microservice"
    Value: !Sub "https://${PerformanceApi}.execute-api.${AWS::Region}.amazonaws.com/test"
